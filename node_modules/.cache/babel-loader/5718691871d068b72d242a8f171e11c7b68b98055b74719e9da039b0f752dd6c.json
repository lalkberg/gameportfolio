{"ast":null,"code":"import'./App.css';//import TodoList from './TodoList';\nimport React,{useState,useRef,useEffect}from'react';//import { v4 as uuidv4 } from 'uuid';\nimport{BrowserRouter as Router,Routes,Route}from\"react-router-dom\";import Home from'./components/Home';import Portfolio from'./components/Portfolio';import Contact from'./components/Contact';import Nav from'./Nav';//const LOCAL_STORAGE_KEY = \"todoApp.todos\"\nimport{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";function App(){/*\r\n  const [todos, setTodos] = useState([])\r\n  const todoNameRef = useRef()\r\n\r\n  useEffect(() => {\r\n    const storedTodos = JSON.parse(localStorage.getItem(LOCAL_STORAGE_KEY))\r\n    if (storedTodos) setTodos(storedTodos);\r\n  }, [])\r\n\r\n  useEffect(() => {\r\n    localStorage.setItem(LOCAL_STORAGE_KEY, JSON.stringify(todos))\r\n  }, [todos])\r\n\r\n  function toggleTodo(id){\r\n    const newTodos = [...todos]\r\n    const todo = newTodos.find(todo => todo.id === id)\r\n    todo.complete = !todo.complete\r\n    setTodos(newTodos)\r\n  }\r\n\r\n  function handleAddTodo(e) {\r\n    const name = todoNameRef.current.value\r\n    if (name === '') return\r\n    console.log(name)\r\n    setTodos(prevTodos => {\r\n      return [...prevTodos, { id: uuidv4(), name: name, complete: false}]\r\n    })\r\n    todoNameRef.current.value = null\r\n  }\r\n\r\n  function handleClearTodos(e) {\r\n    const newTodos = todos.filter(todo => !todo.complete)\r\n    setTodos(newTodos)\r\n  }\r\n  */return/*#__PURE__*/_jsx(_Fragment,{children:/*#__PURE__*/_jsxs(Router,{children:[/*#__PURE__*/_jsx(Nav,{className:\"nav\"}),/*#__PURE__*/_jsxs(Routes,{children:[/*#__PURE__*/_jsx(Route,{path:\"/\",element:/*#__PURE__*/_jsx(Home,{}),exact:true}),/*#__PURE__*/_jsx(Route,{path:\"/portfolio\",element:/*#__PURE__*/_jsx(Portfolio,{}),exact:true}),/*#__PURE__*/_jsx(Route,{path:\"/contact\",element:/*#__PURE__*/_jsx(Contact,{}),exact:true})]})]})});/*\r\n  return (  \r\n    <>\r\n    <Router>\r\n      <Routes>\r\n        <Route exact path = \"/\" component={Home}/>\r\n        <Route exact path = \"/portfolio\" component={Portfolio}/>\r\n        <Route exact path = \"/contact\" component={Contact}/>\r\n      </Routes>\r\n    </Router>\r\n    <div>\r\n      <button>HOME</button> \r\n      <button>PORTFOLIO</button>\r\n      <button>CONTACT</button>\r\n    </div>\r\n    <TodoList todos={todos} toggleTodo={toggleTodo}/>\r\n    <input ref={todoNameRef} type=\"text\"/>\r\n    <button onClick={handleAddTodo}>Add Todo</button>\r\n    <button onClick={handleClearTodos}>Clear Completed</button>\r\n    <div>{todos.filter(todo => !todo.complete).length} left to do</div>\r\n    </>\r\n    );\r\n    */}export default App;","map":{"version":3,"names":["React","useState","useRef","useEffect","BrowserRouter","Router","Routes","Route","Home","Portfolio","Contact","Nav","jsx","_jsx","jsxs","_jsxs","Fragment","_Fragment","App","children","className","path","element","exact"],"sources":["C:/Users/Leo/source/repos/gameportfolio/src/App.js"],"sourcesContent":["import './App.css';\r\n//import TodoList from './TodoList';\r\nimport React, { useState, useRef, useEffect } from 'react';\r\n//import { v4 as uuidv4 } from 'uuid';\r\nimport {\r\n  BrowserRouter as Router,\r\n  Routes,\r\n  Route\r\n} from \"react-router-dom\";\r\n\r\nimport Home from './components/Home';\r\nimport Portfolio from './components/Portfolio';\r\nimport Contact from './components/Contact';\r\nimport Nav from './Nav';\r\n\r\n//const LOCAL_STORAGE_KEY = \"todoApp.todos\"\r\n\r\nfunction App() {\r\n  /*\r\n  const [todos, setTodos] = useState([])\r\n  const todoNameRef = useRef()\r\n\r\n  useEffect(() => {\r\n    const storedTodos = JSON.parse(localStorage.getItem(LOCAL_STORAGE_KEY))\r\n    if (storedTodos) setTodos(storedTodos);\r\n  }, [])\r\n\r\n  useEffect(() => {\r\n    localStorage.setItem(LOCAL_STORAGE_KEY, JSON.stringify(todos))\r\n  }, [todos])\r\n\r\n  function toggleTodo(id){\r\n    const newTodos = [...todos]\r\n    const todo = newTodos.find(todo => todo.id === id)\r\n    todo.complete = !todo.complete\r\n    setTodos(newTodos)\r\n  }\r\n\r\n  function handleAddTodo(e) {\r\n    const name = todoNameRef.current.value\r\n    if (name === '') return\r\n    console.log(name)\r\n    setTodos(prevTodos => {\r\n      return [...prevTodos, { id: uuidv4(), name: name, complete: false}]\r\n    })\r\n    todoNameRef.current.value = null\r\n  }\r\n\r\n  function handleClearTodos(e) {\r\n    const newTodos = todos.filter(todo => !todo.complete)\r\n    setTodos(newTodos)\r\n  }\r\n  */\r\n  return (\r\n    <>\r\n    <Router>\r\n      <Nav className=\"nav\">\r\n      </Nav>\r\n      <Routes>\r\n        <Route path = \"/\" element={<Home/>} exact/>\r\n        <Route path = \"/portfolio\" element={<Portfolio/>} exact/>\r\n        <Route path = \"/contact\" element={<Contact/>} exact/>\r\n      </Routes>\r\n    </Router>\r\n    </>\r\n  );\r\n\r\n  /*\r\n  return (  \r\n    <>\r\n    <Router>\r\n      <Routes>\r\n        <Route exact path = \"/\" component={Home}/>\r\n        <Route exact path = \"/portfolio\" component={Portfolio}/>\r\n        <Route exact path = \"/contact\" component={Contact}/>\r\n      </Routes>\r\n    </Router>\r\n    <div>\r\n      <button>HOME</button> \r\n      <button>PORTFOLIO</button>\r\n      <button>CONTACT</button>\r\n    </div>\r\n    <TodoList todos={todos} toggleTodo={toggleTodo}/>\r\n    <input ref={todoNameRef} type=\"text\"/>\r\n    <button onClick={handleAddTodo}>Add Todo</button>\r\n    <button onClick={handleClearTodos}>Clear Completed</button>\r\n    <div>{todos.filter(todo => !todo.complete).length} left to do</div>\r\n    </>\r\n    );\r\n    */\r\n}\r\n\r\nexport default App;\r\n"],"mappings":"AAAA,MAAO,WAAW,CAClB;AACA,MAAO,CAAAA,KAAK,EAAIC,QAAQ,CAAEC,MAAM,CAAEC,SAAS,KAAQ,OAAO,CAC1D;AACA,OACEC,aAAa,GAAI,CAAAC,MAAM,CACvBC,MAAM,CACNC,KAAK,KACA,kBAAkB,CAEzB,MAAO,CAAAC,IAAI,KAAM,mBAAmB,CACpC,MAAO,CAAAC,SAAS,KAAM,wBAAwB,CAC9C,MAAO,CAAAC,OAAO,KAAM,sBAAsB,CAC1C,MAAO,CAAAC,GAAG,KAAM,OAAO,CAEvB;AAAA,OAAAC,GAAA,IAAAC,IAAA,gCAAAC,IAAA,IAAAC,KAAA,gCAAAC,QAAA,IAAAC,SAAA,yBAEA,QAAS,CAAAC,GAAGA,CAAA,CAAG,CACb;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IACE,mBACEL,IAAA,CAAAI,SAAA,EAAAE,QAAA,cACAJ,KAAA,CAACV,MAAM,EAAAc,QAAA,eACLN,IAAA,CAACF,GAAG,EAACS,SAAS,CAAC,KAAK,CACf,CAAC,cACNL,KAAA,CAACT,MAAM,EAAAa,QAAA,eACLN,IAAA,CAACN,KAAK,EAACc,IAAI,CAAG,GAAG,CAACC,OAAO,cAAET,IAAA,CAACL,IAAI,GAAC,CAAE,CAACe,KAAK,MAAC,CAAC,cAC3CV,IAAA,CAACN,KAAK,EAACc,IAAI,CAAG,YAAY,CAACC,OAAO,cAAET,IAAA,CAACJ,SAAS,GAAC,CAAE,CAACc,KAAK,MAAC,CAAC,cACzDV,IAAA,CAACN,KAAK,EAACc,IAAI,CAAG,UAAU,CAACC,OAAO,cAAET,IAAA,CAACH,OAAO,GAAC,CAAE,CAACa,KAAK,MAAC,CAAC,EAC/C,CAAC,EACH,CAAC,CACP,CAAC,CAGL;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MACA,CAEA,cAAe,CAAAL,GAAG"},"metadata":{},"sourceType":"module","externalDependencies":[]}